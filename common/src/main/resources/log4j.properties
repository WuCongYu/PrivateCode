#等级为info的日志信息输出到stdout和r这两个目的地，stdout和r的定义在下面的代码,可以任意起名
log4j.rootLogger=all,stdout,r
#org.apache.log4j.ConsoleAppender(控制台)
#org.apache.log4j.FileAppender(文件)
#org.apache.log4j.DailyRollingFileAppender(每天产生一个日志文件)
#org.apache.log4j.RollingFileAppender(文件大小到达指定尺寸的时候产生一个新的文件)
#org.apache.log4j.WriterAppender(将日志信息以流格式发送到任意指定的地方)
#定义名为stdout的输出端是那种类型
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#ConsoleAppender选项属性
#Threshold=debug:指定日志信息的最低输出级别,默认为debug
#ImmediateFlush=true:表示所有消息都会被立即输出,设为false则不输出,默认值是true
#Target=System.err:默认值System.out,输出到控制台(err为红色,out为黑色)
#FileAppender选项属性
#Threshold=info:指定日志信息的最低输出级别,默认为debug
#ImmediateFlush=true:表示所有消息都会被立即输出,设为false则不输出,默认值是true
#File=C:\\log4j.log:指定消息输出到C:\\log4j.log文件
#Append=false:默认值true,将消息追加到指定文件中,false指将消息覆盖指定的文件内容
#Encoding=UTF-8:可以指定文件编码格式
#DailyRollingFileAppender选项属性
#Threshold=warn:指定日志信息的最低输出级别,默认为debug
#ImmediateFlush=true:表示所有消息都会被立即输出,设为false则不输出,默认值是true
#File=C:/log4j.log:指定消息输出到C:/log4j.log文件
#Append=false:默认值true,将消息追加到指定文件中,false指将消息覆盖指定的文件内容
#DatePattern='.'yyyy-ww:每周滚动一次文件,即每周产生一个新的文件.当前月的日志文件名为logging.log4j,前一个月的日志文件名为logging.log4j.yyyy-MM.还可以按用以下参数:
#'.'yyyy-MM:每月
#'.'yyyy-ww:每周
#'.'yyyy-MM-dd:每天
#'.'yyyy-MM-dd-a:每天两次
#'.'yyyy-MM-dd-HH:每小时
#'.'yyyy-MM-dd-HH-mm:每分钟
#Encoding=UTF-8:可以指定文件编码格式
#RollingFileAppender选项属性
#Threshold=ERROR:指定日志信息的最低输出级别,默认为debug
#ImmediateFlush=true:表示所有消息都会被立即输出,设为false则不输出,默认值是true
#File=C:/log4j.log:指定消息输出到C:/log4j.log文件
#Append=false:默认值true,将消息追加到指定文件中,false指将消息覆盖指定的文件内容
#MaxFileSize=100KB:后缀可以是KB,MB,GB.在日志文件到达该大小时,将会自动滚动.即将原来的内容移到logging.log4j.1文件中
#MaxBackupIndex=2:指定可以产生的滚动文件的最大数,例如,设为2则可以产生logging.log4j.1,logging.log4j.2两个滚动文件和一个logging.log4j文件
#Encoding=UTF-8:可以指定文件编码格式
log4j.appender.stdout.Threshold=debug
log4j.appender.stdout.ImmediateFlush=true
log4j.appender.stdout.Target=System.err
#org.apache.log4j.HTMLLayout(以HTML表格形式布局)
#org.apache.log4j.PatternLayout(可以灵活地指定布局模式)
#org.apache.log4j.SimpleLayout(包含日志信息的级别和信息字符串)
#org.apache.log4j.TTCCLayout(包含日志产生的时间、线程、类别等等信息)
#HTMLLayout选项属性
#LocationInfo=true:默认值false,输出java文件名称和行号
#Title=Struts Log Message:默认值 Log4J Log Messages
#PatternLayout选项属性
#ConversionPattern=%m%n:格式化指定的消息(参数意思下面有)
#XMLLayout选项属性
#LocationInfo=true:默认值false,输出java文件名称和行号
#定义名为stdout的输出端的layout是哪种类型
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#%m 输出代码中指定的消息
#%M 输出产生日志信息的方法名
#%p 输出优先级
#%r 输出自应用启动到输出该log信息耗费的毫秒数
#%c 输出所属的类目,通常就是所在类的全名
#%t 输出产生该日志事件的线程名
#%n 输出一个回车换行符,Windows平台为"rn",Unix平台为"n"
#%l 输出日志事件的发生位置,相当于%c.%M(%F:%L)的组合,包括类全名、方法、文件
#%d 输出日志时间,默认格式为ISO8601,也可以指定格式,比如:%d{yyyy-MM-dd HH:mm:ss}
#%F 输出日志消息产生时所在的文件名称
#%L 输出代码中的行号
#%x 输出和当前线程相关联的NDC(嵌套诊断环境),像java servlets多客户多线程的应用中
#%% 输出一个"%"字符
#可以在%与模式字符之间加上修饰符来控制其最小宽度、最大宽度、和文本的对齐方式.如：
#%5c: 输出category名称，最小宽度是5，category<5，默认的情况下右对齐
#%-5c:输出category名称，最小宽度是5，category<5，"-"号指定左对齐,会有空格
#%.5c:输出category名称，最大宽度是5，category>5，就会将左边多出的字符截掉，<5不会有空格
#%20.30c:category名称<20补空格,并且右对齐,>30字符，就从左边交远销出的字符截掉
#org.apache.log4j.PatternLayout布局就要指定打印信息的具体格式
log4j.appender.stdout.layout.ConversionPattern=[%p] %d{yyyy-MM-dd HH:mm:ss} %c>>>%m%n
#定义名为r的输出端的类型为日志文件
log4j.appender.r=org.apache.log4j.FileAppender
#定义名为r的输出端的layout类型
log4j.appender.r.layout=org.apache.log4j.PatternLayout
#org.apache.log4j.PatternLayout布局就要指定打印信息的具体格式
log4j.appender.r.layout.ConversionPattern=[%p] %d{yyyy-MM-dd HH:mm:ss} %c>>>%m%n
#定义名为r的输出端的文件名
log4j.appender.r.File=F:\\MyEclipse 2017 CI\\web-project\\sso_ssm\\src\\main\\resources\\log\\log.log
log4j.appender.r.Threshold=info
log4j.appender.r.ImmediateFlush=true
log4j.appender.r.Append=true
log4j.appender.r.Encoding=UTF-8
#指定包下的所有类的等级。
#log4j.logger.com.sso=debug
#log4j.logger.org.springframework=warn
###########################日志发送到邮件###########################
#log4j.appender.logMail=org.apache.log4j.net.SMTPAppender
#缓存文件大小,日志达到1K时发送Email
#log4j.appender.logMail.BufferSize=1
#发送邮件的服务器
#log4j.appender.logMail.SMTPHost=smtp.qq.com
#邮件的标题
#log4j.appender.logMail.Subject=用户权限系统日志文件
#log4j.appender.logMail.layout=org.apache.log4j.HTMLLayout
#log4j.appender.logMail.layout.LocationInfo=true
#log4j.appender.logMail.layout.Title=用户权限系统日志文件
#log4j.appender.logMail.Threshold=debug
#是否打印调试信息,如果选true,则会输出和smTp之间的握手等详细信息
#log4j.appender.logMail.SMTPDebug=true
#mail服务器端口,qq为587
#log4j.appender.logMail.SMTPPort=465
#发件人地址
#log4j.appender.logMail.From=
#日志邮件的接收者,如果要发送给多个邮箱,则用逗号分隔
#log4j.appender.logMail.To=
#用户名
#log4j.appender.logMail.SMTPUsername=
#密码
#log4j.appender.logMail.SMTPPassword=


